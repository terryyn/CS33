--- thttpd-sp.s	2017-11-19 02:01:19.758887000 -0800
+++ thttpd-no.s	2017-11-19 02:05:54.711109000 -0800
@@ -352,13 +352,10 @@
 	pushq	%rbx
 	.cfi_def_cfa_offset 16
 	.cfi_offset 3, -16
-	subq	$32, %rsp
-	.cfi_def_cfa_offset 48
-	movq	%fs:40, %rax
-	movq	%rax, 24(%rsp)
-	xorl	%eax, %eax
+	subq	$16, %rsp
+	.cfi_def_cfa_offset 32
 	testq	%rdi, %rdi
-	je	.L54
+	je	.L53
 .L50:
 	movq	(%rdi), %rax
 	movl	$1, %ecx
@@ -383,10 +380,7 @@
 	call	fdwatch_logstats
 	movq	%rbx, %rdi
 	call	tmr_logstats
-	movq	24(%rsp), %rax
-	xorq	%fs:40, %rax
-	jne	.L55
-	addq	$32, %rsp
+	addq	$16, %rsp
 	.cfi_remember_state
 	.cfi_def_cfa_offset 16
 	popq	%rbx
@@ -394,15 +388,13 @@
 	ret
 	.p2align 4,,10
 	.p2align 3
-.L54:
+.L53:
 	.cfi_restore_state
 	movq	%rsp, %rdi
 	xorl	%esi, %esi
 	call	gettimeofday
 	movq	%rsp, %rdi
 	jmp	.L50
-.L55:
-	call	__stack_chk_fail
 	.cfi_endproc
 .LFE34:
 	.size	logstats, .-logstats
@@ -484,7 +476,7 @@
 	movl	(%rax), %ebp
 	movl	watchdog_flag(%rip), %eax
 	testl	%eax, %eax
-	je	.L64
+	je	.L62
 	movl	$360, %edi
 	movl	$0, watchdog_flag(%rip)
 	call	alarm
@@ -497,7 +489,7 @@
 	popq	%rbp
 	.cfi_def_cfa_offset 8
 	ret
-.L64:
+.L62:
 	.cfi_restore_state
 	movl	$.LC8, %edi
 	call	chdir
@@ -526,43 +518,37 @@
 	.cfi_offset 3, -32
 	subq	$16, %rsp
 	.cfi_def_cfa_offset 48
-	movq	%fs:40, %rax
-	movq	%rax, 8(%rsp)
-	xorl	%eax, %eax
 	call	__errno_location
 	movl	(%rax), %r12d
 	movq	%rax, %rbx
-.L66:
-	leaq	4(%rsp), %rsi
+.L64:
+	leaq	12(%rsp), %rsi
 	movl	$1, %edx
 	movl	$-1, %edi
 	call	waitpid
 	testl	%eax, %eax
-	je	.L67
-	js	.L83
+	je	.L65
+	js	.L80
 	movq	hs(%rip), %rdx
 	testq	%rdx, %rdx
-	je	.L66
+	je	.L64
 	movl	36(%rdx), %eax
 	subl	$1, %eax
 	cmovs	%ebp, %eax
 	movl	%eax, 36(%rdx)
-	jmp	.L66
+	jmp	.L64
 	.p2align 4,,10
 	.p2align 3
-.L83:
+.L80:
 	movl	(%rbx), %eax
 	cmpl	$4, %eax
-	je	.L66
+	je	.L64
 	cmpl	$11, %eax
-	je	.L66
+	je	.L64
 	cmpl	$10, %eax
-	jne	.L84
-.L67:
-	movq	8(%rsp), %rax
-	xorq	%fs:40, %rax
+	jne	.L81
+.L65:
 	movl	%r12d, (%rbx)
-	jne	.L85
 	addq	$16, %rsp
 	.cfi_remember_state
 	.cfi_def_cfa_offset 32
@@ -575,15 +561,22 @@
 	ret
 	.p2align 4,,10
 	.p2align 3
-.L84:
+.L81:
 	.cfi_restore_state
 	movl	$.LC9, %esi
 	movl	$3, %edi
 	xorl	%eax, %eax
 	call	syslog
-	jmp	.L67
-.L85:
-	call	__stack_chk_fail
+	movl	%r12d, (%rbx)
+	addq	$16, %rsp
+	.cfi_def_cfa_offset 32
+	popq	%rbx
+	.cfi_def_cfa_offset 24
+	popq	%rbp
+	.cfi_def_cfa_offset 16
+	popq	%r12
+	.cfi_def_cfa_offset 8
+	ret
 	.cfi_endproc
 .LFE3:
 	.size	handle_chld, .-handle_chld
@@ -604,12 +597,12 @@
 	.cfi_def_cfa_offset 16
 	call	strdup
 	testq	%rax, %rax
-	je	.L89
+	je	.L85
 	addq	$8, %rsp
 	.cfi_remember_state
 	.cfi_def_cfa_offset 8
 	ret
-.L89:
+.L85:
 	.cfi_restore_state
 	movl	$.LC10, %esi
 	movl	$2, %edi
@@ -712,285 +705,279 @@
 	movq	%rdi, %rbx
 	subq	$112, %rsp
 	.cfi_def_cfa_offset 160
-	movq	%fs:40, %rax
-	movq	%rax, 104(%rsp)
-	xorl	%eax, %eax
 	call	fopen
 	testq	%rax, %rax
-	je	.L137
+	je	.L132
 	movq	%rax, %r12
 	movabsq	$4294977024, %r13
-.L91:
+.L87:
 	movq	%r12, %rdx
 	movl	$1000, %esi
 	movq	%rsp, %rdi
 	call	fgets
 	testq	%rax, %rax
-	je	.L141
+	je	.L136
 	movl	$35, %esi
 	movq	%rsp, %rdi
 	call	strchr
 	testq	%rax, %rax
-	je	.L92
+	je	.L88
 	movb	$0, (%rax)
-.L92:
+.L88:
 	movl	$.LC13, %esi
 	movq	%rsp, %rdi
 	call	strspn
 	leaq	(%rsp,%rax), %rbp
 	cmpb	$0, 0(%rbp)
-	je	.L91
+	je	.L87
 	.p2align 4,,10
 	.p2align 3
-.L125:
+.L121:
 	movl	$.LC13, %esi
 	movq	%rbp, %rdi
 	call	strcspn
 	leaq	0(%rbp,%rax), %rbx
 	movzbl	(%rbx), %eax
 	cmpb	$32, %al
-	ja	.L94
+	ja	.L90
 	btq	%rax, %r13
-	jnc	.L94
+	jnc	.L90
 	.p2align 4,,10
 	.p2align 3
-.L95:
+.L91:
 	addq	$1, %rbx
 	movzbl	(%rbx), %edx
 	movb	$0, -1(%rbx)
 	cmpb	$32, %dl
-	jbe	.L142
-.L94:
+	jbe	.L137
+.L90:
 	movl	$61, %esi
 	movq	%rbp, %rdi
 	xorl	%r14d, %r14d
 	call	strchr
 	testq	%rax, %rax
-	je	.L96
+	je	.L92
 	leaq	1(%rax), %r14
 	movb	$0, (%rax)
-.L96:
+.L92:
 	movl	$.LC14, %esi
 	movq	%rbp, %rdi
 	call	strcasecmp
 	testl	%eax, %eax
-	je	.L143
+	je	.L138
 	movl	$.LC15, %esi
 	movq	%rbp, %rdi
 	call	strcasecmp
 	testl	%eax, %eax
-	je	.L144
+	je	.L139
 	movl	$.LC16, %esi
 	movq	%rbp, %rdi
 	call	strcasecmp
 	testl	%eax, %eax
-	je	.L145
+	je	.L140
 	movl	$.LC17, %esi
 	movq	%rbp, %rdi
 	call	strcasecmp
 	testl	%eax, %eax
-	je	.L146
+	je	.L141
 	movl	$.LC18, %esi
 	movq	%rbp, %rdi
 	call	strcasecmp
 	testl	%eax, %eax
-	je	.L147
+	je	.L142
 	movl	$.LC19, %esi
 	movq	%rbp, %rdi
 	call	strcasecmp
 	testl	%eax, %eax
-	je	.L148
+	je	.L143
 	movl	$.LC20, %esi
 	movq	%rbp, %rdi
 	call	strcasecmp
 	testl	%eax, %eax
-	je	.L139
+	je	.L134
 	movl	$.LC21, %esi
 	movq	%rbp, %rdi
 	call	strcasecmp
 	testl	%eax, %eax
-	je	.L140
+	je	.L135
 	movl	$.LC22, %esi
 	movq	%rbp, %rdi
 	call	strcasecmp
 	testl	%eax, %eax
-	je	.L139
+	je	.L134
 	movl	$.LC23, %esi
 	movq	%rbp, %rdi
 	call	strcasecmp
 	testl	%eax, %eax
-	je	.L140
+	je	.L135
 	movl	$.LC24, %esi
 	movq	%rbp, %rdi
 	call	strcasecmp
 	testl	%eax, %eax
-	je	.L149
+	je	.L144
 	movl	$.LC25, %esi
 	movq	%rbp, %rdi
 	call	strcasecmp
 	testl	%eax, %eax
-	je	.L150
+	je	.L145
 	movl	$.LC26, %esi
 	movq	%rbp, %rdi
 	call	strcasecmp
 	testl	%eax, %eax
-	je	.L151
+	je	.L146
 	movl	$.LC27, %esi
 	movq	%rbp, %rdi
 	call	strcasecmp
 	testl	%eax, %eax
-	je	.L152
+	je	.L147
 	movl	$.LC28, %esi
 	movq	%rbp, %rdi
 	call	strcasecmp
 	testl	%eax, %eax
-	je	.L153
+	je	.L148
 	movl	$.LC29, %esi
 	movq	%rbp, %rdi
 	call	strcasecmp
 	testl	%eax, %eax
-	je	.L154
+	je	.L149
 	movl	$.LC30, %esi
 	movq	%rbp, %rdi
 	call	strcasecmp
 	testl	%eax, %eax
-	je	.L155
+	je	.L150
 	movl	$.LC31, %esi
 	movq	%rbp, %rdi
 	call	strcasecmp
 	testl	%eax, %eax
-	je	.L156
+	je	.L151
 	movl	$.LC32, %esi
 	movq	%rbp, %rdi
 	call	strcasecmp
 	testl	%eax, %eax
-	je	.L157
+	je	.L152
 	movl	$.LC33, %esi
 	movq	%rbp, %rdi
 	call	strcasecmp
 	testl	%eax, %eax
-	je	.L158
+	je	.L153
 	movl	$.LC34, %esi
 	movq	%rbp, %rdi
 	call	strcasecmp
 	testl	%eax, %eax
-	je	.L159
+	je	.L154
 	movl	$.LC35, %esi
 	movq	%rbp, %rdi
 	call	strcasecmp
 	testl	%eax, %eax
-	je	.L160
+	je	.L155
 	movl	$.LC36, %esi
 	movq	%rbp, %rdi
 	call	strcasecmp
 	testl	%eax, %eax
-	je	.L161
+	je	.L156
 	movl	$.LC37, %esi
 	movq	%rbp, %rdi
 	call	strcasecmp
 	testl	%eax, %eax
-	je	.L162
+	je	.L157
 	movl	$.LC38, %esi
 	movq	%rbp, %rdi
 	call	strcasecmp
 	testl	%eax, %eax
-	je	.L163
+	je	.L158
 	movl	$.LC39, %esi
 	movq	%rbp, %rdi
 	call	strcasecmp
 	testl	%eax, %eax
-	je	.L164
+	je	.L159
 	movl	$.LC40, %esi
 	movq	%rbp, %rdi
 	call	strcasecmp
 	testl	%eax, %eax
-	jne	.L124
+	jne	.L120
 	movq	%r14, %rsi
 	movq	%rbp, %rdi
 	call	value_required
 	movq	%r14, %rdi
 	call	atoi
 	movl	%eax, max_age(%rip)
-	jmp	.L98
+	jmp	.L94
 	.p2align 4,,10
 	.p2align 3
-.L142:
+.L137:
 	btq	%rdx, %r13
-	jc	.L95
-	jmp	.L94
+	jc	.L91
+	jmp	.L90
 	.p2align 4,,10
 	.p2align 3
-.L143:
+.L138:
 	movq	%r14, %rsi
 	movq	%rbp, %rdi
 	call	no_value_required
 	movl	$1, debug(%rip)
-.L98:
+.L94:
 	movl	$.LC13, %esi
 	movq	%rbx, %rdi
 	call	strspn
 	leaq	(%rbx,%rax), %rbp
 	cmpb	$0, 0(%rbp)
-	jne	.L125
-	jmp	.L91
+	jne	.L121
+	jmp	.L87
 	.p2align 4,,10
 	.p2align 3
-.L144:
+.L139:
 	movq	%r14, %rsi
 	movq	%rbp, %rdi
 	call	value_required
 	movq	%r14, %rdi
 	call	atoi
 	movw	%ax, port(%rip)
-	jmp	.L98
-.L145:
+	jmp	.L94
+.L140:
 	movq	%r14, %rsi
 	movq	%rbp, %rdi
 	call	value_required
 	movq	%r14, %rdi
 	call	e_strdup
 	movq	%rax, dir(%rip)
-	jmp	.L98
-.L146:
+	jmp	.L94
+.L141:
 	movq	%r14, %rsi
 	movq	%rbp, %rdi
 	call	no_value_required
 	movl	$1, do_chroot(%rip)
 	movl	$1, no_symlink_check(%rip)
-	jmp	.L98
-.L147:
+	jmp	.L94
+.L142:
 	movq	%r14, %rsi
 	movq	%rbp, %rdi
 	call	no_value_required
 	movl	$0, do_chroot(%rip)
 	movl	$0, no_symlink_check(%rip)
-	jmp	.L98
-.L148:
+	jmp	.L94
+.L143:
 	movq	%r14, %rsi
 	movq	%rbp, %rdi
 	call	value_required
 	movq	%r14, %rdi
 	call	e_strdup
 	movq	%rax, data_dir(%rip)
-	jmp	.L98
-.L139:
+	jmp	.L94
+.L134:
 	movq	%r14, %rsi
 	movq	%rbp, %rdi
 	call	no_value_required
 	movl	$0, no_symlink_check(%rip)
-	jmp	.L98
-.L140:
+	jmp	.L94
+.L135:
 	movq	%r14, %rsi
 	movq	%rbp, %rdi
 	call	no_value_required
 	movl	$1, no_symlink_check(%rip)
-	jmp	.L98
-.L141:
+	jmp	.L94
+.L136:
 	movq	%r12, %rdi
 	call	fclose
-	movq	104(%rsp), %rax
-	xorq	%fs:40, %rax
-	jne	.L165
 	addq	$112, %rsp
 	.cfi_remember_state
 	.cfi_def_cfa_offset 48
@@ -1005,7 +992,7 @@
 	popq	%r14
 	.cfi_def_cfa_offset 8
 	ret
-.L149:
+.L144:
 	.cfi_restore_state
 	movq	%r14, %rsi
 	movq	%rbp, %rdi
@@ -1013,77 +1000,75 @@
 	movq	%r14, %rdi
 	call	e_strdup
 	movq	%rax, user(%rip)
-	jmp	.L98
-.L150:
+	jmp	.L94
+.L145:
 	movq	%r14, %rsi
 	movq	%rbp, %rdi
 	call	value_required
 	movq	%r14, %rdi
 	call	e_strdup
 	movq	%rax, cgi_pattern(%rip)
-	jmp	.L98
-.L153:
+	jmp	.L94
+.L148:
 	movq	%r14, %rsi
 	movq	%rbp, %rdi
 	call	no_value_required
 	movl	$1, no_empty_referers(%rip)
-	jmp	.L98
-.L152:
+	jmp	.L94
+.L147:
 	movq	%r14, %rsi
 	movq	%rbp, %rdi
 	call	value_required
 	movq	%r14, %rdi
 	call	e_strdup
 	movq	%rax, url_pattern(%rip)
-	jmp	.L98
-.L151:
+	jmp	.L94
+.L146:
 	movq	%r14, %rsi
 	movq	%rbp, %rdi
 	call	value_required
 	movq	%r14, %rdi
 	call	atoi
 	movl	%eax, cgi_limit(%rip)
-	jmp	.L98
-.L137:
+	jmp	.L94
+.L132:
 	movq	%rbx, %rdi
 	call	perror
 	movl	$1, %edi
 	call	exit
-.L165:
-	call	__stack_chk_fail
-.L157:
+.L152:
 	movq	%r14, %rsi
 	movq	%rbp, %rdi
 	call	value_required
 	movq	%r14, %rdi
 	call	e_strdup
 	movq	%rax, logfile(%rip)
-	jmp	.L98
-.L156:
+	jmp	.L94
+.L151:
 	movq	%r14, %rsi
 	movq	%rbp, %rdi
 	call	value_required
 	movq	%r14, %rdi
 	call	e_strdup
 	movq	%rax, hostname(%rip)
-	jmp	.L98
-.L155:
+	jmp	.L94
+.L150:
 	movq	%r14, %rsi
 	movq	%rbp, %rdi
 	call	value_required
 	movq	%r14, %rdi
 	call	e_strdup
 	movq	%rax, throttlefile(%rip)
-	jmp	.L98
-.L154:
+	jmp	.L94
+.L149:
 	movq	%r14, %rsi
 	movq	%rbp, %rdi
 	call	value_required
 	movq	%r14, %rdi
 	call	e_strdup
 	movq	%rax, local_pattern(%rip)
-	jmp	.L98
-.L124:
+	jmp	.L94
+.L120:
 	movq	stderr(%rip), %rdi
 	movq	argv0(%rip), %rdx
 	movq	%rbp, %rcx
@@ -1092,54 +1077,54 @@
 	call	fprintf
 	movl	$1, %edi
 	call	exit
-.L164:
+.L159:
 	movq	%r14, %rsi
 	movq	%rbp, %rdi
 	call	value_required
 	movq	%r14, %rdi
 	call	e_strdup
 	movq	%rax, p3p(%rip)
-	jmp	.L98
-.L163:
+	jmp	.L94
+.L158:
 	movq	%r14, %rsi
 	movq	%rbp, %rdi
 	call	value_required
 	movq	%r14, %rdi
 	call	e_strdup
 	movq	%rax, charset(%rip)
-	jmp	.L98
-.L162:
+	jmp	.L94
+.L157:
 	movq	%r14, %rsi
 	movq	%rbp, %rdi
 	call	value_required
 	movq	%r14, %rdi
 	call	e_strdup
 	movq	%rax, pidfile(%rip)
-	jmp	.L98
-.L161:
+	jmp	.L94
+.L156:
 	movq	%r14, %rsi
 	movq	%rbp, %rdi
 	call	no_value_required
 	movl	$0, do_global_passwd(%rip)
-	jmp	.L98
-.L160:
+	jmp	.L94
+.L155:
 	movq	%r14, %rsi
 	movq	%rbp, %rdi
 	call	no_value_required
 	movl	$1, do_global_passwd(%rip)
-	jmp	.L98
-.L159:
+	jmp	.L94
+.L154:
 	movq	%r14, %rsi
 	movq	%rbp, %rdi
 	call	no_value_required
 	movl	$0, do_vhost(%rip)
-	jmp	.L98
-.L158:
+	jmp	.L94
+.L153:
 	movq	%r14, %rsi
 	movq	%rbp, %rdi
 	call	no_value_required
 	movl	$1, do_vhost(%rip)
-	jmp	.L98
+	jmp	.L94
 	.cfi_endproc
 .LFE12:
 	.size	read_config, .-read_config
@@ -1249,68 +1234,68 @@
 	movq	$.LC43, charset(%rip)
 	movq	$.LC44, p3p(%rip)
 	movl	$-1, max_age(%rip)
-	jle	.L197
+	jle	.L191
 	movq	8(%rsi), %rbx
 	movq	%rsi, %r14
 	movl	$1, %ebp
 	movl	$.LC45, %r12d
 	cmpb	$45, (%rbx)
-	je	.L168
-	jmp	.L169
+	je	.L162
+	jmp	.L163
 	.p2align 4,,10
 	.p2align 3
-.L214:
+.L208:
 	leal	1(%rbp), %r15d
 	cmpl	%r13d, %r15d
-	jl	.L212
+	jl	.L206
 	movl	$.LC48, %edi
 	movl	$3, %ecx
 	movq	%rbx, %rsi
 	repz cmpsb
-	je	.L175
-.L174:
+	je	.L169
+.L168:
 	movl	$.LC49, %edi
 	movl	$3, %ecx
 	movq	%rbx, %rsi
 	repz cmpsb
-	jne	.L175
+	jne	.L169
 	leal	1(%rbp), %eax
 	cmpl	%r13d, %eax
-	jge	.L175
+	jge	.L169
 	movslq	%eax, %rdx
 	movl	%eax, %ebp
 	movq	(%r14,%rdx,8), %rdx
 	movq	%rdx, dir(%rip)
 	.p2align 4,,10
 	.p2align 3
-.L173:
+.L167:
 	addl	$1, %ebp
 	cmpl	%ebp, %r13d
-	jle	.L167
-.L215:
+	jle	.L161
+.L209:
 	movslq	%ebp, %rax
 	movq	(%r14,%rax,8), %rbx
 	cmpb	$45, (%rbx)
-	jne	.L169
-.L168:
+	jne	.L163
+.L162:
 	movl	$3, %ecx
 	movq	%rbx, %rsi
 	movq	%r12, %rdi
 	repz cmpsb
-	je	.L213
+	je	.L207
 	movl	$.LC47, %edi
 	movl	$3, %ecx
 	movq	%rbx, %rsi
 	repz cmpsb
-	je	.L214
+	je	.L208
 	movl	$.LC48, %edi
 	movl	$3, %ecx
 	movq	%rbx, %rsi
 	repz cmpsb
-	jne	.L174
+	jne	.L168
 	leal	1(%rbp), %r15d
 	cmpl	%r13d, %r15d
-	jge	.L175
+	jge	.L169
 	movslq	%r15d, %rax
 	movl	%r15d, %ebp
 	movq	(%r14,%rax,8), %rdi
@@ -1318,10 +1303,10 @@
 	call	atoi
 	cmpl	%ebp, %r13d
 	movw	%ax, port(%rip)
-	jg	.L215
-.L167:
+	jg	.L209
+.L161:
 	cmpl	%ebp, %r13d
-	jne	.L169
+	jne	.L163
 	addq	$8, %rsp
 	.cfi_remember_state
 	.cfi_def_cfa_offset 56
@@ -1340,260 +1325,260 @@
 	ret
 	.p2align 4,,10
 	.p2align 3
-.L175:
+.L169:
 	.cfi_restore_state
 	movl	$.LC50, %edi
 	movl	$3, %ecx
 	movq	%rbx, %rsi
 	repz cmpsb
-	jne	.L176
+	jne	.L170
 	movl	$1, do_chroot(%rip)
 	movl	$1, no_symlink_check(%rip)
-	jmp	.L173
+	jmp	.L167
 	.p2align 4,,10
 	.p2align 3
-.L176:
+.L170:
 	movl	$.LC51, %edi
 	movl	$5, %ecx
 	movq	%rbx, %rsi
 	repz cmpsb
-	jne	.L177
+	jne	.L171
 	movl	$0, do_chroot(%rip)
 	movl	$0, no_symlink_check(%rip)
-	jmp	.L173
+	jmp	.L167
 	.p2align 4,,10
 	.p2align 3
-.L212:
+.L206:
 	movslq	%r15d, %rax
 	movl	%r15d, %ebp
 	movq	(%r14,%rax,8), %rdi
 	call	read_config
-	jmp	.L173
+	jmp	.L167
 	.p2align 4,,10
 	.p2align 3
-.L177:
+.L171:
 	movl	$.LC52, %edi
 	movl	$4, %ecx
 	movq	%rbx, %rsi
 	repz cmpsb
-	jne	.L178
+	jne	.L172
 	leal	1(%rbp), %eax
 	cmpl	%r13d, %eax
-	jge	.L178
+	jge	.L172
 	movslq	%eax, %rdx
 	movl	%eax, %ebp
 	movq	(%r14,%rdx,8), %rdx
 	movq	%rdx, data_dir(%rip)
-	jmp	.L173
+	jmp	.L167
 	.p2align 4,,10
 	.p2align 3
-.L178:
+.L172:
 	movl	$.LC53, %edi
 	movl	$3, %ecx
 	movq	%rbx, %rsi
 	repz cmpsb
-	jne	.L179
+	jne	.L173
 	movl	$0, no_symlink_check(%rip)
-	jmp	.L173
-.L179:
+	jmp	.L167
+.L173:
 	movl	$.LC54, %esi
 	movq	%rbx, %rdi
 	call	strcmp
 	testl	%eax, %eax
-	je	.L216
+	je	.L210
 	movl	$.LC55, %esi
 	movq	%rbx, %rdi
 	call	strcmp
 	testl	%eax, %eax
-	jne	.L181
+	jne	.L175
 	leal	1(%rbp), %eax
 	cmpl	%r13d, %eax
-	jl	.L217
-.L181:
+	jl	.L211
+.L175:
 	movl	$.LC56, %esi
 	movq	%rbx, %rdi
 	call	strcmp
 	testl	%eax, %eax
-	jne	.L182
+	jne	.L176
 	leal	1(%rbp), %eax
 	cmpl	%r13d, %eax
-	jl	.L218
-.L182:
+	jl	.L212
+.L176:
 	movl	$.LC57, %esi
 	movq	%rbx, %rdi
 	call	strcmp
 	testl	%eax, %eax
-	jne	.L183
+	jne	.L177
 	leal	1(%rbp), %eax
 	cmpl	%r13d, %eax
-	jl	.L219
+	jl	.L213
 	movl	$.LC58, %esi
 	movq	%rbx, %rdi
 	call	strcmp
 	testl	%eax, %eax
-	jne	.L185
-.L186:
+	jne	.L179
+.L180:
 	movl	$.LC60, %esi
 	movq	%rbx, %rdi
 	call	strcmp
 	testl	%eax, %eax
-	jne	.L187
+	jne	.L181
 	movl	$1, do_vhost(%rip)
-	jmp	.L173
-.L213:
+	jmp	.L167
+.L207:
 	movl	$.LC46, %edi
 	call	puts
 	xorl	%edi, %edi
 	call	exit
-.L216:
+.L210:
 	movl	$1, no_symlink_check(%rip)
-	jmp	.L173
-.L183:
+	jmp	.L167
+.L177:
 	movl	$.LC58, %esi
 	movq	%rbx, %rdi
 	call	strcmp
 	testl	%eax, %eax
-	je	.L220
-.L185:
+	je	.L214
+.L179:
 	movl	$.LC59, %esi
 	movq	%rbx, %rdi
 	call	strcmp
 	testl	%eax, %eax
-	jne	.L186
+	jne	.L180
 	leal	1(%rbp), %eax
 	cmpl	%r13d, %eax
-	jge	.L186
+	jge	.L180
 	movslq	%eax, %rdx
 	movl	%eax, %ebp
 	movq	(%r14,%rdx,8), %rdx
 	movq	%rdx, logfile(%rip)
-	jmp	.L173
-.L217:
+	jmp	.L167
+.L211:
 	movslq	%eax, %rdx
 	movl	%eax, %ebp
 	movq	(%r14,%rdx,8), %rdx
 	movq	%rdx, user(%rip)
-	jmp	.L173
-.L218:
+	jmp	.L167
+.L212:
 	movslq	%eax, %rdx
 	movl	%eax, %ebp
 	movq	(%r14,%rdx,8), %rdx
 	movq	%rdx, cgi_pattern(%rip)
-	jmp	.L173
-.L219:
+	jmp	.L167
+.L213:
 	movslq	%eax, %rdx
 	movl	%eax, %ebp
 	movq	(%r14,%rdx,8), %rdx
 	movq	%rdx, throttlefile(%rip)
-	jmp	.L173
-.L220:
+	jmp	.L167
+.L214:
 	leal	1(%rbp), %eax
 	cmpl	%r13d, %eax
-	jge	.L186
+	jge	.L180
 	movslq	%eax, %rdx
 	movl	%eax, %ebp
 	movq	(%r14,%rdx,8), %rdx
 	movq	%rdx, hostname(%rip)
-	jmp	.L173
-.L197:
-	movl	$1, %ebp
 	jmp	.L167
-.L187:
+.L191:
+	movl	$1, %ebp
+	jmp	.L161
+.L181:
 	movl	$.LC61, %esi
 	movq	%rbx, %rdi
 	call	strcmp
 	testl	%eax, %eax
-	jne	.L188
+	jne	.L182
 	movl	$0, do_vhost(%rip)
-	jmp	.L173
-.L188:
+	jmp	.L167
+.L182:
 	movl	$.LC62, %esi
 	movq	%rbx, %rdi
 	call	strcmp
 	testl	%eax, %eax
-	jne	.L189
+	jne	.L183
 	movl	$1, do_global_passwd(%rip)
-	jmp	.L173
-.L189:
+	jmp	.L167
+.L183:
 	movl	$.LC63, %esi
 	movq	%rbx, %rdi
 	call	strcmp
 	testl	%eax, %eax
-	jne	.L190
+	jne	.L184
 	movl	$0, do_global_passwd(%rip)
-	jmp	.L173
-.L190:
+	jmp	.L167
+.L184:
 	movl	$.LC64, %esi
 	movq	%rbx, %rdi
 	call	strcmp
 	testl	%eax, %eax
-	jne	.L191
+	jne	.L185
 	leal	1(%rbp), %eax
 	cmpl	%r13d, %eax
-	jge	.L192
+	jge	.L186
 	movslq	%eax, %rdx
 	movl	%eax, %ebp
 	movq	(%r14,%rdx,8), %rdx
 	movq	%rdx, pidfile(%rip)
-	jmp	.L173
-.L191:
+	jmp	.L167
+.L185:
 	movl	$.LC65, %esi
 	movq	%rbx, %rdi
 	call	strcmp
 	testl	%eax, %eax
-	jne	.L193
+	jne	.L187
 	leal	1(%rbp), %eax
 	cmpl	%r13d, %eax
-	jge	.L192
+	jge	.L186
 	movslq	%eax, %rdx
 	movl	%eax, %ebp
 	movq	(%r14,%rdx,8), %rdx
 	movq	%rdx, charset(%rip)
-	jmp	.L173
-.L192:
+	jmp	.L167
+.L186:
 	movl	$.LC66, %esi
 	movq	%rbx, %rdi
 	call	strcmp
 	testl	%eax, %eax
-	je	.L195
-.L194:
+	je	.L189
+.L188:
 	movl	$.LC67, %esi
 	movq	%rbx, %rdi
 	call	strcmp
 	testl	%eax, %eax
-	jne	.L195
+	jne	.L189
 	leal	1(%rbp), %r15d
 	cmpl	%r13d, %r15d
-	jge	.L195
+	jge	.L189
 	movslq	%r15d, %rax
 	movl	%r15d, %ebp
 	movq	(%r14,%rax,8), %rdi
 	call	atoi
 	movl	%eax, max_age(%rip)
-	jmp	.L173
-.L193:
+	jmp	.L167
+.L187:
 	movl	$.LC66, %esi
 	movq	%rbx, %rdi
 	call	strcmp
 	testl	%eax, %eax
-	jne	.L194
+	jne	.L188
 	leal	1(%rbp), %eax
 	cmpl	%r13d, %eax
-	jge	.L195
+	jge	.L189
 	movslq	%eax, %rdx
 	movl	%eax, %ebp
 	movq	(%r14,%rdx,8), %rdx
 	movq	%rdx, p3p(%rip)
-	jmp	.L173
-.L195:
+	jmp	.L167
+.L189:
 	movl	$.LC68, %esi
 	movq	%rbx, %rdi
 	call	strcmp
 	testl	%eax, %eax
-	jne	.L169
+	jne	.L163
 	movl	$1, debug(%rip)
-	jmp	.L173
-.L169:
+	jmp	.L167
+.L163:
 	call	usage
 	.cfi_endproc
 .LFE10:
@@ -1647,12 +1632,9 @@
 	.cfi_offset 3, -48
 	subq	$10048, %rsp
 	.cfi_def_cfa_offset 10096
-	movq	%fs:40, %rax
-	movq	%rax, 10040(%rsp)
-	xorl	%eax, %eax
 	call	fopen
 	testq	%rax, %rax
-	je	.L255
+	je	.L248
 	leaq	16(%rsp), %rdi
 	leaq	32(%rsp), %rbx
 	xorl	%esi, %esi
@@ -1661,29 +1643,29 @@
 	call	gettimeofday
 	.p2align 4,,10
 	.p2align 3
-.L230:
+.L224:
 	movq	%r12, %rdx
 	movl	$5000, %esi
 	movq	%rbx, %rdi
 	call	fgets
 	testq	%rax, %rax
-	je	.L256
+	je	.L249
 	movl	$35, %esi
 	movq	%rbx, %rdi
 	call	strchr
 	testq	%rax, %rax
-	je	.L224
+	je	.L218
 	movb	$0, (%rax)
-.L224:
+.L218:
 	movq	%rbx, %rax
-.L225:
+.L219:
 	movl	(%rax), %ecx
 	addq	$4, %rax
 	leal	-16843009(%rcx), %edx
 	notl	%ecx
 	andl	%ecx, %edx
 	andl	$-2139062144, %edx
-	je	.L225
+	je	.L219
 	movl	%edx, %ecx
 	shrl	$16, %ecx
 	testl	$32896, %edx
@@ -1696,15 +1678,15 @@
 	subq	%rbx, %rax
 	testl	%eax, %eax
 	movl	%eax, %edx
-	jle	.L227
+	jle	.L221
 	leal	-1(%rax), %edx
 	movslq	%edx, %rax
 	movzbl	32(%rsp,%rax), %ecx
 	cmpb	$32, %cl
-	jbe	.L257
+	jbe	.L250
 	.p2align 4,,10
 	.p2align 3
-.L228:
+.L222:
 	leaq	8(%rsp), %rcx
 	leaq	5040(%rsp), %rdx
 	xorl	%eax, %eax
@@ -1713,7 +1695,7 @@
 	movq	%rbx, %rdi
 	call	__isoc99_sscanf
 	cmpl	$3, %eax
-	je	.L231
+	je	.L225
 	leaq	5040(%rsp), %rdx
 	xorl	%eax, %eax
 	movq	%rsp, %rcx
@@ -1721,39 +1703,39 @@
 	movq	%rbx, %rdi
 	call	__isoc99_sscanf
 	cmpl	$2, %eax
-	jne	.L232
+	jne	.L226
 	movq	$0, 8(%rsp)
-.L231:
+.L225:
 	cmpb	$47, 5040(%rsp)
-	jne	.L235
-	jmp	.L258
+	jne	.L229
+	jmp	.L251
 	.p2align 4,,10
 	.p2align 3
-.L236:
+.L230:
 	leaq	2(%rax), %rsi
 	leaq	1(%rax), %rdi
 	call	strcpy
-.L235:
+.L229:
 	leaq	5040(%rsp), %rdi
 	movl	$.LC74, %esi
 	call	strstr
 	testq	%rax, %rax
-	jne	.L236
+	jne	.L230
 	movslq	numthrottles(%rip), %rdx
 	movl	maxthrottles(%rip), %eax
 	cmpl	%eax, %edx
-	jl	.L237
+	jl	.L231
 	testl	%eax, %eax
-	jne	.L238
+	jne	.L232
 	movl	$4800, %edi
 	movl	$100, maxthrottles(%rip)
 	call	malloc
 	movq	%rax, throttles(%rip)
-.L239:
+.L233:
 	testq	%rax, %rax
-	je	.L240
+	je	.L234
 	movslq	numthrottles(%rip), %rdx
-.L241:
+.L235:
 	leaq	(%rdx,%rdx,2), %r14
 	leaq	5040(%rsp), %rdi
 	salq	$4, %r14
@@ -1774,37 +1756,37 @@
 	movq	$0, 32(%rax)
 	movl	$0, 40(%rax)
 	movq	%rcx, 16(%rax)
-	jmp	.L230
+	jmp	.L224
 	.p2align 4,,10
 	.p2align 3
-.L257:
+.L250:
 	btq	%rcx, %rbp
-	jnc	.L228
+	jnc	.L222
 	movl	%edx, %edx
 	movq	%rax, %rcx
 	subq	%rdx, %rcx
-	jmp	.L229
+	jmp	.L223
 	.p2align 4,,10
 	.p2align 3
-.L259:
+.L252:
 	movzbl	31(%rsp,%rax), %edx
 	cmpb	$32, %dl
-	ja	.L228
+	ja	.L222
 	subq	$1, %rax
 	btq	%rdx, %rbp
-	jnc	.L228
-.L229:
+	jnc	.L222
+.L223:
 	cmpq	%rax, %rcx
 	movl	%eax, %edx
 	movb	$0, (%rbx,%rax)
-	jne	.L259
-.L227:
+	jne	.L252
+.L221:
 	testl	%edx, %edx
-	je	.L230
-	jmp	.L228
+	je	.L224
+	jmp	.L222
 	.p2align 4,,10
 	.p2align 3
-.L232:
+.L226:
 	movq	%rbx, %rcx
 	movq	%r13, %rdx
 	xorl	%eax, %eax
@@ -1818,10 +1800,10 @@
 	movl	$.LC73, %esi
 	xorl	%eax, %eax
 	call	fprintf
-	jmp	.L230
+	jmp	.L224
 	.p2align 4,,10
 	.p2align 3
-.L238:
+.L232:
 	addl	%eax, %eax
 	movq	throttles(%rip), %rdi
 	movl	%eax, maxthrottles(%rip)
@@ -1830,18 +1812,15 @@
 	salq	$4, %rsi
 	call	realloc
 	movq	%rax, throttles(%rip)
-	jmp	.L239
+	jmp	.L233
 	.p2align 4,,10
 	.p2align 3
-.L237:
+.L231:
 	movq	throttles(%rip), %rax
-	jmp	.L241
-.L256:
+	jmp	.L235
+.L249:
 	movq	%r12, %rdi
 	call	fclose
-	movq	10040(%rsp), %rax
-	xorq	%fs:40, %rax
-	jne	.L260
 	addq	$10048, %rsp
 	.cfi_remember_state
 	.cfi_def_cfa_offset 48
@@ -1856,14 +1835,14 @@
 	popq	%r14
 	.cfi_def_cfa_offset 8
 	ret
-.L258:
+.L251:
 	.cfi_restore_state
 	leaq	5040(%rsp), %rax
 	leaq	5041(%rsp), %rsi
 	movq	%rax, %rdi
 	call	strcpy
-	jmp	.L235
-.L255:
+	jmp	.L229
+.L248:
 	movq	%r13, %rdx
 	movl	$.LC69, %esi
 	movl	$2, %edi
@@ -1873,9 +1852,7 @@
 	call	perror
 	movl	$1, %edi
 	call	exit
-.L260:
-	call	__stack_chk_fail
-.L240:
+.L234:
 	movl	$.LC75, %esi
 	movl	$2, %edi
 	xorl	%eax, %eax
@@ -1907,21 +1884,21 @@
 	.cfi_startproc
 	movl	no_log(%rip), %eax
 	testl	%eax, %eax
-	jne	.L261
+	jne	.L253
 	cmpq	$0, hs(%rip)
-	je	.L261
+	je	.L253
 	movq	logfile(%rip), %rsi
 	testq	%rsi, %rsi
-	je	.L261
+	je	.L253
 	movl	$.LC77, %edi
 	movl	$2, %ecx
 	repz cmpsb
-	jne	.L275
-.L261:
+	jne	.L267
+.L253:
 	rep ret
 	.p2align 4,,10
 	.p2align 3
-.L275:
+.L267:
 	pushq	%rbp
 	.cfi_def_cfa_offset 16
 	.cfi_offset 6, -16
@@ -1943,9 +1920,9 @@
 	movq	%rbp, %rdi
 	call	chmod
 	testq	%rbx, %rbx
-	je	.L265
+	je	.L257
 	testl	%eax, %eax
-	jne	.L265
+	jne	.L257
 	movq	%rbx, %rdi
 	call	fileno
 	movl	$2, %esi
@@ -1967,7 +1944,7 @@
 	jmp	httpd_set_logfp
 	.p2align 4,,10
 	.p2align 3
-.L265:
+.L257:
 	.cfi_restore_state
 	addq	$8, %rsp
 	.cfi_def_cfa_offset 24
@@ -2015,31 +1992,31 @@
 	subq	$16, %rsp
 	.cfi_def_cfa_offset 48
 	movl	num_connects(%rip), %eax
-.L285:
+.L277:
 	cmpl	%eax, max_connects(%rip)
-	jle	.L295
+	jle	.L287
 	movslq	first_free_connect(%rip), %rax
 	cmpl	$-1, %eax
-	je	.L279
+	je	.L271
 	leaq	(%rax,%rax,8), %rbx
 	salq	$4, %rbx
 	addq	connects(%rip), %rbx
 	movl	(%rbx), %eax
 	testl	%eax, %eax
-	jne	.L279
+	jne	.L271
 	movq	8(%rbx), %rdx
 	testq	%rdx, %rdx
-	je	.L296
-.L281:
+	je	.L288
+.L273:
 	movq	hs(%rip), %rdi
 	movl	%ebp, %esi
 	call	httpd_get_conn
 	testl	%eax, %eax
-	je	.L284
+	je	.L276
 	cmpl	$2, %eax
-	jne	.L297
+	jne	.L289
 	movl	$1, %eax
-.L276:
+.L268:
 	addq	$16, %rsp
 	.cfi_remember_state
 	.cfi_def_cfa_offset 32
@@ -2052,7 +2029,7 @@
 	ret
 	.p2align 4,,10
 	.p2align 3
-.L297:
+.L289:
 	.cfi_restore_state
 	movl	4(%rbx), %eax
 	movl	$1, (%rbx)
@@ -2076,12 +2053,12 @@
 	addq	$1, stats_connections(%rip)
 	movl	num_connects(%rip), %eax
 	cmpl	stats_simultaneous(%rip), %eax
-	jle	.L285
+	jle	.L277
 	movl	%eax, stats_simultaneous(%rip)
-	jmp	.L285
+	jmp	.L277
 	.p2align 4,,10
 	.p2align 3
-.L284:
+.L276:
 	movq	%r12, %rdi
 	movl	%eax, 12(%rsp)
 	call	tmr_run
@@ -2098,20 +2075,20 @@
 	ret
 	.p2align 4,,10
 	.p2align 3
-.L296:
+.L288:
 	.cfi_restore_state
 	movl	$720, %edi
 	call	malloc
 	testq	%rax, %rax
 	movq	%rax, %rdx
 	movq	%rax, 8(%rbx)
-	je	.L298
+	je	.L290
 	movl	$0, (%rax)
 	addl	$1, httpd_conn_count(%rip)
-	jmp	.L281
+	jmp	.L273
 	.p2align 4,,10
 	.p2align 3
-.L295:
+.L287:
 	xorl	%eax, %eax
 	movl	$.LC81, %esi
 	movl	$4, %edi
@@ -2119,18 +2096,18 @@
 	movq	%r12, %rdi
 	call	tmr_run
 	xorl	%eax, %eax
-	jmp	.L276
-.L279:
+	jmp	.L268
+.L271:
 	movl	$.LC82, %esi
-.L294:
+.L286:
 	movl	$2, %edi
 	xorl	%eax, %eax
 	call	syslog
 	movl	$1, %edi
 	call	exit
-.L298:
+.L290:
 	movl	$.LC83, %esi
-	jmp	.L294
+	jmp	.L286
 	.cfi_endproc
 .LFE19:
 	.size	handle_newconnect, .-handle_newconnect
@@ -2150,7 +2127,7 @@
 	movq	%rax, 64(%rdi)
 	movl	numthrottles(%rip), %eax
 	testl	%eax, %eax
-	jle	.L316
+	jle	.L308
 	pushq	%r12
 	.cfi_def_cfa_offset 16
 	.cfi_offset 12, -16
@@ -2163,45 +2140,45 @@
 	.cfi_def_cfa_offset 32
 	.cfi_offset 3, -32
 	movq	%rdi, %rbx
-	jmp	.L308
+	jmp	.L300
 	.p2align 4,,10
 	.p2align 3
-.L307:
+.L299:
 	cmpq	%rdi, %rax
 	cmovl	%rdi, %rax
 	movq	%rax, 72(%rbx)
-.L301:
+.L293:
 	addl	$1, %r12d
 	cmpl	%r12d, numthrottles(%rip)
-	jle	.L300
-.L320:
+	jle	.L292
+.L312:
 	addq	$48, %rbp
 	cmpl	$9, 56(%rbx)
-	jg	.L300
-.L308:
+	jg	.L292
+.L300:
 	movq	8(%rbx), %rax
 	movq	240(%rax), %rsi
 	movq	throttles(%rip), %rax
 	movq	(%rax,%rbp), %rdi
 	call	match
 	testl	%eax, %eax
-	je	.L301
+	je	.L293
 	movq	throttles(%rip), %rcx
 	addq	%rbp, %rcx
 	movq	8(%rcx), %rax
 	movq	24(%rcx), %rdx
 	leaq	(%rax,%rax), %rsi
 	cmpq	%rsi, %rdx
-	jg	.L310
+	jg	.L302
 	movq	16(%rcx), %rdi
 	cmpq	%rdi, %rdx
-	jl	.L310
+	jl	.L302
 	movl	40(%rcx), %edx
 	testl	%edx, %edx
-	js	.L303
+	js	.L295
 	addl	$1, %edx
 	movslq	%edx, %r8
-.L304:
+.L296:
 	movslq	56(%rbx), %rsi
 	leal	1(%rsi), %r9d
 	movl	%r9d, 56(%rbx)
@@ -2211,19 +2188,19 @@
 	idivq	%r8
 	movq	64(%rbx), %rdx
 	cmpq	$-1, %rdx
-	je	.L319
+	je	.L311
 	cmpq	%rax, %rdx
 	cmovle	%rdx, %rax
-.L319:
+.L311:
 	movq	%rax, 64(%rbx)
 	movq	72(%rbx), %rax
 	cmpq	$-1, %rax
-	jne	.L307
+	jne	.L299
 	addl	$1, %r12d
 	cmpl	%r12d, numthrottles(%rip)
 	movq	%rdi, 72(%rbx)
-	jg	.L320
-.L300:
+	jg	.L312
+.L292:
 	popq	%rbx
 	.cfi_remember_state
 	.cfi_def_cfa_offset 24
@@ -2235,7 +2212,7 @@
 	ret
 	.p2align 4,,10
 	.p2align 3
-.L303:
+.L295:
 	.cfi_restore_state
 	movl	$3, %edi
 	xorl	%eax, %eax
@@ -2248,10 +2225,10 @@
 	movl	$0, 40(%rcx)
 	movq	8(%rcx), %rax
 	movq	16(%rcx), %rdi
-	jmp	.L304
+	jmp	.L296
 	.p2align 4,,10
 	.p2align 3
-.L310:
+.L302:
 	popq	%rbx
 	.cfi_def_cfa_offset 24
 	xorl	%eax, %eax
@@ -2260,7 +2237,7 @@
 	popq	%r12
 	.cfi_def_cfa_offset 8
 	ret
-.L316:
+.L308:
 	.cfi_restore 3
 	.cfi_restore 6
 	.cfi_restore 12
@@ -2284,26 +2261,23 @@
 	pushq	%rbx
 	.cfi_def_cfa_offset 32
 	.cfi_offset 3, -32
-	subq	$32, %rsp
-	.cfi_def_cfa_offset 64
+	subq	$16, %rsp
+	.cfi_def_cfa_offset 48
 	movq	%rsp, %rdi
-	movq	%fs:40, %rax
-	movq	%rax, 24(%rsp)
-	xorl	%eax, %eax
 	call	gettimeofday
 	movq	%rsp, %rdi
 	call	logstats
 	movl	max_connects(%rip), %edx
 	testl	%edx, %edx
-	jle	.L322
+	jle	.L314
 	xorl	%ebx, %ebx
 	xorl	%ebp, %ebp
-	jmp	.L325
+	jmp	.L317
 	.p2align 4,,10
 	.p2align 3
-.L323:
+.L315:
 	testq	%rdi, %rdi
-	je	.L324
+	je	.L316
 	call	httpd_destroy_conn
 	movq	connects(%rip), %r12
 	addq	%rbx, %r12
@@ -2311,53 +2285,50 @@
 	call	free
 	subl	$1, httpd_conn_count(%rip)
 	movq	$0, 8(%r12)
-.L324:
+.L316:
 	addl	$1, %ebp
 	addq	$144, %rbx
 	cmpl	%ebp, max_connects(%rip)
-	jle	.L322
-.L325:
+	jle	.L314
+.L317:
 	movq	connects(%rip), %rax
 	addq	%rbx, %rax
 	movq	8(%rax), %rdi
 	movl	(%rax), %eax
 	testl	%eax, %eax
-	je	.L323
+	je	.L315
 	movq	%rsp, %rsi
 	call	httpd_close_conn
 	movq	connects(%rip), %rax
 	movq	8(%rax,%rbx), %rdi
-	jmp	.L323
+	jmp	.L315
 	.p2align 4,,10
 	.p2align 3
-.L322:
+.L314:
 	movq	hs(%rip), %rbx
 	testq	%rbx, %rbx
-	je	.L326
+	je	.L318
 	movl	72(%rbx), %edi
 	movq	$0, hs(%rip)
 	cmpl	$-1, %edi
-	jne	.L348
+	jne	.L339
 	movl	76(%rbx), %edi
 	cmpl	$-1, %edi
-	jne	.L349
-.L328:
+	jne	.L340
+.L320:
 	movq	%rbx, %rdi
 	call	httpd_terminate
-.L326:
+.L318:
 	call	mmc_destroy
 	call	tmr_destroy
 	movq	connects(%rip), %rdi
 	call	free
 	movq	throttles(%rip), %rdi
 	testq	%rdi, %rdi
-	je	.L321
+	je	.L313
 	call	free
-.L321:
-	movq	24(%rsp), %rax
-	xorq	%fs:40, %rax
-	jne	.L350
-	addq	$32, %rsp
+.L313:
+	addq	$16, %rsp
 	.cfi_remember_state
 	.cfi_def_cfa_offset 32
 	popq	%rbx
@@ -2369,20 +2340,18 @@
 	ret
 	.p2align 4,,10
 	.p2align 3
-.L349:
+.L340:
 	.cfi_restore_state
 	call	fdwatch_del_fd
-	jmp	.L328
+	jmp	.L320
 	.p2align 4,,10
 	.p2align 3
-.L348:
+.L339:
 	call	fdwatch_del_fd
 	movl	76(%rbx), %edi
 	cmpl	$-1, %edi
-	je	.L328
-	jmp	.L349
-.L350:
-	call	__stack_chk_fail
+	je	.L320
+	jmp	.L340
 	.cfi_endproc
 .LFE18:
 	.size	shut_down, .-shut_down
@@ -2397,12 +2366,12 @@
 	.cfi_startproc
 	movl	num_connects(%rip), %eax
 	testl	%eax, %eax
-	je	.L356
+	je	.L346
 	movl	$1, got_usr1(%rip)
 	ret
 	.p2align 4,,10
 	.p2align 3
-.L356:
+.L346:
 	subq	$8, %rsp
 	.cfi_def_cfa_offset 16
 	call	shut_down
@@ -2448,22 +2417,22 @@
 	.cfi_startproc
 	movl	56(%rdi), %eax
 	testl	%eax, %eax
-	jle	.L359
+	jle	.L349
 	subl	$1, %eax
 	movq	throttles(%rip), %rcx
 	leaq	16(%rdi), %rdx
 	leaq	20(%rdi,%rax,4), %rsi
 	.p2align 4,,10
 	.p2align 3
-.L361:
+.L351:
 	movslq	(%rdx), %rax
 	addq	$4, %rdx
 	leaq	(%rax,%rax,2), %rax
 	salq	$4, %rax
 	subl	$1, 40(%rcx,%rax)
 	cmpq	%rsi, %rdx
-	jne	.L361
-.L359:
+	jne	.L351
+.L349:
 	rep ret
 	.cfi_endproc
 .LFE36:
@@ -2483,22 +2452,22 @@
 	movq	200(%rdi), %rax
 	addq	%rax, stats_bytes(%rip)
 	cmpl	$3, (%rbx)
-	je	.L364
+	je	.L354
 	movl	704(%rdi), %edi
 	movq	%rsi, 8(%rsp)
 	call	fdwatch_del_fd
 	movq	8(%rbx), %rdi
 	movq	8(%rsp), %rsi
-.L364:
+.L354:
 	call	httpd_close_conn
 	movq	%rbx, %rdi
 	call	clear_throttles.isra.0
 	movq	104(%rbx), %rdi
 	testq	%rdi, %rdi
-	je	.L365
+	je	.L355
 	call	tmr_cancel
 	movq	$0, 104(%rbx)
-.L365:
+.L355:
 	movl	first_free_connect(%rip), %eax
 	movl	$0, (%rbx)
 	subl	$1, num_connects(%rip)
@@ -2541,21 +2510,21 @@
 	.cfi_def_cfa_offset 32
 	movq	96(%rdi), %rdi
 	testq	%rdi, %rdi
-	je	.L371
+	je	.L361
 	call	tmr_cancel
 	movq	$0, 96(%rbx)
-.L371:
+.L361:
 	movl	(%rbx), %eax
 	cmpl	$4, %eax
-	je	.L384
+	je	.L374
 	movq	8(%rbx), %rdx
 	movl	556(%rdx), %ecx
 	testl	%ecx, %ecx
-	je	.L373
+	je	.L363
 	cmpl	$3, %eax
 	movl	704(%rdx), %edi
-	jne	.L385
-.L374:
+	jne	.L375
+.L364:
 	movl	$1, %esi
 	movl	$4, (%rbx)
 	call	shutdown
@@ -2565,12 +2534,12 @@
 	movl	704(%rax), %edi
 	call	fdwatch_add_fd
 	cmpq	$0, 104(%rbx)
-	je	.L375
+	je	.L365
 	movl	$.LC87, %esi
 	movl	$3, %edi
 	xorl	%eax, %eax
 	call	syslog
-.L375:
+.L365:
 	xorl	%r8d, %r8d
 	movl	$500, %ecx
 	movq	%rbx, %rdx
@@ -2579,7 +2548,7 @@
 	call	tmr_create
 	testq	%rax, %rax
 	movq	%rax, 104(%rbx)
-	je	.L386
+	je	.L376
 	addq	$8, %rsp
 	.cfi_remember_state
 	.cfi_def_cfa_offset 24
@@ -2590,21 +2559,21 @@
 	ret
 	.p2align 4,,10
 	.p2align 3
-.L385:
+.L375:
 	.cfi_restore_state
 	call	fdwatch_del_fd
 	movq	8(%rbx), %rax
 	movl	704(%rax), %edi
-	jmp	.L374
+	jmp	.L364
 	.p2align 4,,10
 	.p2align 3
-.L384:
+.L374:
 	movq	104(%rbx), %rdi
 	call	tmr_cancel
 	movq	8(%rbx), %rax
 	movq	$0, 104(%rbx)
 	movl	$0, 556(%rax)
-.L373:
+.L363:
 	addq	$8, %rsp
 	.cfi_remember_state
 	.cfi_def_cfa_offset 24
@@ -2615,7 +2584,7 @@
 	popq	%rbp
 	.cfi_def_cfa_offset 8
 	jmp	really_clear_connection
-.L386:
+.L376:
 	.cfi_restore_state
 	movl	$2, %edi
 	movl	$.LC88, %esi
@@ -2674,10 +2643,10 @@
 	movq	160(%rbx), %rsi
 	movq	152(%rbx), %rdx
 	cmpq	%rdx, %rsi
-	jb	.L390
+	jb	.L380
 	cmpq	$5000, %rdx
-	jbe	.L391
-.L415:
+	jbe	.L381
+.L405:
 	movq	httpd_err400form(%rip), %r8
 	movq	httpd_err400title(%rip), %rdx
 	movl	$.LC44, %r9d
@@ -2685,7 +2654,7 @@
 	movl	$400, %esi
 	movq	%rbx, %rdi
 	call	httpd_send_err
-.L414:
+.L404:
 	popq	%rbx
 	.cfi_remember_state
 	.cfi_def_cfa_offset 24
@@ -2698,7 +2667,7 @@
 	jmp	finish_connection
 	.p2align 4,,10
 	.p2align 3
-.L391:
+.L381:
 	.cfi_restore_state
 	leaq	152(%rbx), %rsi
 	leaq	144(%rbx), %rdi
@@ -2706,21 +2675,21 @@
 	call	httpd_realloc_str
 	movq	152(%rbx), %rdx
 	movq	160(%rbx), %rsi
-.L390:
+.L380:
 	subq	%rsi, %rdx
 	addq	144(%rbx), %rsi
 	movl	704(%rbx), %edi
 	call	read
 	testl	%eax, %eax
-	je	.L415
-	jns	.L393
+	je	.L405
+	jns	.L383
 	call	__errno_location
 	movl	(%rax), %eax
 	cmpl	$4, %eax
-	je	.L389
+	je	.L379
 	cmpl	$11, %eax
-	jne	.L415
-.L389:
+	jne	.L405
+.L379:
 	popq	%rbx
 	.cfi_remember_state
 	.cfi_def_cfa_offset 24
@@ -2731,7 +2700,7 @@
 	ret
 	.p2align 4,,10
 	.p2align 3
-.L393:
+.L383:
 	.cfi_restore_state
 	cltq
 	addq	%rax, 160(%rbx)
@@ -2740,17 +2709,17 @@
 	movq	%rax, 88(%rbp)
 	call	httpd_got_request
 	testl	%eax, %eax
-	je	.L389
+	je	.L379
 	cmpl	$2, %eax
-	je	.L415
+	je	.L405
 	movq	%rbx, %rdi
 	call	httpd_parse_request
 	testl	%eax, %eax
-	js	.L414
+	js	.L404
 	movq	%rbp, %rdi
 	call	check_throttles
 	testl	%eax, %eax
-	jne	.L398
+	jne	.L388
 	movq	208(%rbx), %r9
 	movq	httpd_err503form(%rip), %r8
 	movl	$.LC44, %ecx
@@ -2758,29 +2727,29 @@
 	movl	$503, %esi
 	movq	%rbx, %rdi
 	call	httpd_send_err
-	jmp	.L414
+	jmp	.L404
 	.p2align 4,,10
 	.p2align 3
-.L398:
+.L388:
 	movq	%r12, %rsi
 	movq	%rbx, %rdi
 	call	httpd_start_request
 	testl	%eax, %eax
-	js	.L414
+	js	.L404
 	movl	528(%rbx), %eax
 	testl	%eax, %eax
-	je	.L400
+	je	.L390
 	movq	536(%rbx), %rax
 	movq	%rax, 136(%rbp)
 	movq	544(%rbx), %rax
 	addq	$1, %rax
 	movq	%rax, 128(%rbp)
-.L401:
+.L391:
 	cmpq	$0, 712(%rbx)
-	je	.L416
+	je	.L406
 	movq	128(%rbp), %rax
 	cmpq	%rax, 136(%rbp)
-	jge	.L414
+	jge	.L404
 	movq	(%r12), %rax
 	movl	704(%rbx), %edi
 	movl	$2, 0(%rbp)
@@ -2798,36 +2767,36 @@
 	popq	%r12
 	.cfi_def_cfa_offset 8
 	jmp	fdwatch_add_fd
-.L400:
+.L390:
 	.cfi_restore_state
 	movq	192(%rbx), %rax
 	movl	$0, %edx
 	testq	%rax, %rax
 	cmovs	%rdx, %rax
 	movq	%rax, 128(%rbp)
-	jmp	.L401
-.L416:
+	jmp	.L391
+.L406:
 	movl	56(%rbp), %eax
 	movq	200(%rbx), %rsi
 	testl	%eax, %eax
-	jle	.L404
+	jle	.L394
 	subl	$1, %eax
 	movq	throttles(%rip), %rcx
 	leaq	16(%rbp), %rdx
 	leaq	20(%rbp,%rax,4), %rdi
 	.p2align 4,,10
 	.p2align 3
-.L405:
+.L395:
 	movslq	(%rdx), %rax
 	addq	$4, %rdx
 	leaq	(%rax,%rax,2), %rax
 	salq	$4, %rax
 	addq	%rsi, 32(%rcx,%rax)
 	cmpq	%rdx, %rdi
-	jne	.L405
-.L404:
+	jne	.L395
+.L394:
 	movq	%rsi, 136(%rbp)
-	jmp	.L414
+	jmp	.L404
 	.cfi_endproc
 .LFE20:
 	.size	handle_read, .-handle_read
@@ -2846,7 +2815,7 @@
 	.cfi_startproc
 	movl	max_connects(%rip), %eax
 	testl	%eax, %eax
-	jle	.L426
+	jle	.L416
 	pushq	%r13
 	.cfi_def_cfa_offset 16
 	.cfi_offset 13, -16
@@ -2864,32 +2833,32 @@
 	xorl	%ebp, %ebp
 	subq	$8, %rsp
 	.cfi_def_cfa_offset 48
-	jmp	.L422
+	jmp	.L412
 	.p2align 4,,10
 	.p2align 3
-.L431:
-	jl	.L419
+.L421:
+	jl	.L409
 	cmpl	$3, %eax
-	jg	.L419
+	jg	.L409
 	movq	0(%r13), %rax
 	subq	88(%rbx), %rax
 	cmpq	$299, %rax
-	jg	.L429
-.L419:
+	jg	.L419
+.L409:
 	addl	$1, %ebp
 	addq	$144, %r12
 	cmpl	%ebp, max_connects(%rip)
-	jle	.L430
-.L422:
+	jle	.L420
+.L412:
 	movq	connects(%rip), %rbx
 	addq	%r12, %rbx
 	movl	(%rbx), %eax
 	cmpl	$1, %eax
-	jne	.L431
+	jne	.L421
 	movq	0(%r13), %rax
 	subq	88(%rbx), %rax
 	cmpq	$59, %rax
-	jle	.L419
+	jle	.L409
 	movq	8(%rbx), %rax
 	leaq	16(%rax), %rdi
 	call	httpd_ntoa
@@ -2908,10 +2877,10 @@
 	movq	%r13, %rsi
 	movq	%rbx, %rdi
 	call	finish_connection
-	jmp	.L419
+	jmp	.L409
 	.p2align 4,,10
 	.p2align 3
-.L430:
+.L420:
 	addq	$8, %rsp
 	.cfi_remember_state
 	.cfi_def_cfa_offset 40
@@ -2926,7 +2895,7 @@
 	ret
 	.p2align 4,,10
 	.p2align 3
-.L429:
+.L419:
 	.cfi_restore_state
 	movq	8(%rbx), %rax
 	leaq	16(%rax), %rdi
@@ -2939,10 +2908,10 @@
 	movq	%r13, %rsi
 	movq	%rbx, %rdi
 	call	clear_connection
-	jmp	.L419
+	jmp	.L409
 	.p2align 4,,10
 	.p2align 3
-.L426:
+.L416:
 	.cfi_def_cfa_offset 8
 	.cfi_restore 3
 	.cfi_restore 6
@@ -2974,6 +2943,7 @@
 	pushq	%r12
 	.cfi_def_cfa_offset 24
 	.cfi_offset 12, -24
+	movl	$1000000000, %eax
 	pushq	%rbp
 	.cfi_def_cfa_offset 32
 	.cfi_offset 6, -32
@@ -2982,22 +2952,18 @@
 	.cfi_offset 3, -40
 	movq	%rsi, %rbp
 	movq	%rdi, %rbx
-	subq	$56, %rsp
-	.cfi_def_cfa_offset 96
+	subq	$40, %rsp
+	.cfi_def_cfa_offset 80
 	movq	64(%rdi), %rcx
 	movq	8(%rdi), %r12
-	movq	%fs:40, %rax
-	movq	%rax, 40(%rsp)
-	xorl	%eax, %eax
-	movl	$1000000000, %eax
 	cmpq	$-1, %rcx
-	je	.L433
+	je	.L423
 	leaq	3(%rcx), %rdx
 	testq	%rcx, %rcx
 	cmovns	%rcx, %rdx
 	movq	%rdx, %rax
 	sarq	$2, %rax
-.L433:
+.L423:
 	movq	136(%rbx), %rdx
 	movq	128(%rbx), %rdi
 	movq	712(%r12), %rsi
@@ -3009,19 +2975,19 @@
 	cmova	%rax, %rdx
 	testq	%rcx, %rcx
 	movl	704(%r12), %edi
-	jne	.L434
+	jne	.L424
 	call	write
 	testl	%eax, %eax
-	js	.L484
-.L436:
-	je	.L453
+	js	.L473
+.L426:
+	je	.L443
 	movq	0(%rbp), %rdx
 	movslq	%eax, %rsi
 	movq	%rdx, 88(%rbx)
 	movq	472(%r12), %rdx
 	testq	%rdx, %rdx
-	jne	.L442
-.L443:
+	jne	.L432
+.L433:
 	movq	8(%rbx), %rdx
 	movq	136(%rbx), %r9
 	movq	200(%rdx), %rax
@@ -3031,42 +2997,42 @@
 	movq	%rax, 200(%rdx)
 	movl	56(%rbx), %edx
 	testl	%edx, %edx
-	jle	.L445
+	jle	.L435
 	subl	$1, %edx
 	movq	throttles(%rip), %rdi
 	leaq	16(%rbx), %rcx
 	leaq	20(%rbx,%rdx,4), %r8
 	.p2align 4,,10
 	.p2align 3
-.L446:
+.L436:
 	movslq	(%rcx), %rdx
 	addq	$4, %rcx
 	leaq	(%rdx,%rdx,2), %rdx
 	salq	$4, %rdx
 	addq	%rsi, 32(%rdi,%rdx)
 	cmpq	%rcx, %r8
-	jne	.L446
-.L445:
+	jne	.L436
+.L435:
 	cmpq	128(%rbx), %r9
-	jge	.L485
+	jge	.L474
 	movq	112(%rbx), %rdx
 	cmpq	$100, %rdx
-	jle	.L448
+	jle	.L438
 	subq	$100, %rdx
 	movq	%rdx, 112(%rbx)
-.L448:
+.L438:
 	movq	64(%rbx), %rcx
 	cmpq	$-1, %rcx
-	je	.L432
+	je	.L422
 	movq	0(%rbp), %rdx
 	subq	80(%rbx), %rdx
 	movq	%rdx, %r13
-	je	.L457
+	je	.L446
 	cqto
 	idivq	%r13
-.L449:
+.L439:
 	cmpq	%rax, %rcx
-	jge	.L432
+	jge	.L422
 	movl	704(%r12), %edi
 	movl	$3, (%rbx)
 	call	fdwatch_del_fd
@@ -3077,21 +3043,21 @@
 	movl	%eax, %r12d
 	subl	%r13d, %r12d
 	cmpq	$0, 96(%rbx)
-	je	.L450
+	je	.L440
 	movl	$.LC91, %esi
 	movl	$3, %edi
 	xorl	%eax, %eax
 	call	syslog
-.L450:
+.L440:
 	testl	%r12d, %r12d
 	movl	$500, %ecx
-	jle	.L483
+	jle	.L472
 	movslq	%r12d, %r12
 	imulq	$1000, %r12, %rcx
-	jmp	.L483
+	jmp	.L472
 	.p2align 4,,10
 	.p2align 3
-.L434:
+.L424:
 	movq	368(%r12), %rax
 	movq	%rsi, 16(%rsp)
 	movq	%rsp, %rsi
@@ -3101,48 +3067,60 @@
 	movq	%rax, (%rsp)
 	call	writev
 	testl	%eax, %eax
-	jns	.L436
-.L484:
+	jns	.L426
+.L473:
 	call	__errno_location
 	movl	(%rax), %eax
 	cmpl	$4, %eax
-	je	.L432
+	je	.L422
 	cmpl	$11, %eax
-	je	.L453
+	je	.L443
 	cmpl	$32, %eax
 	setne	%cl
 	cmpl	$22, %eax
 	setne	%dl
 	testb	%dl, %cl
-	je	.L440
+	je	.L430
 	cmpl	$104, %eax
-	je	.L440
+	je	.L430
 	movq	208(%r12), %rdx
 	movl	$.LC93, %esi
 	movl	$3, %edi
 	xorl	%eax, %eax
 	call	syslog
-.L440:
+.L430:
 	movq	%rbp, %rsi
 	movq	%rbx, %rdi
 	call	clear_connection
-	jmp	.L432
+	addq	$40, %rsp
+	.cfi_remember_state
+	.cfi_def_cfa_offset 40
+	popq	%rbx
+	.cfi_def_cfa_offset 32
+	popq	%rbp
+	.cfi_def_cfa_offset 24
+	popq	%r12
+	.cfi_def_cfa_offset 16
+	popq	%r13
+	.cfi_def_cfa_offset 8
+	ret
 	.p2align 4,,10
 	.p2align 3
-.L453:
+.L443:
+	.cfi_restore_state
 	addq	$100, 112(%rbx)
 	movl	704(%r12), %edi
 	movl	$3, (%rbx)
 	call	fdwatch_del_fd
 	cmpq	$0, 96(%rbx)
-	je	.L439
+	je	.L429
 	movl	$.LC91, %esi
 	movl	$3, %edi
 	xorl	%eax, %eax
 	call	syslog
-.L439:
+.L429:
 	movq	112(%rbx), %rcx
-.L483:
+.L472:
 	xorl	%r8d, %r8d
 	movq	%rbx, %rdx
 	movl	$wakeup_connection, %esi
@@ -3150,12 +3128,9 @@
 	call	tmr_create
 	testq	%rax, %rax
 	movq	%rax, 96(%rbx)
-	je	.L486
-.L432:
-	movq	40(%rsp), %rax
-	xorq	%fs:40, %rax
-	jne	.L487
-	addq	$56, %rsp
+	je	.L475
+.L422:
+	addq	$40, %rsp
 	.cfi_remember_state
 	.cfi_def_cfa_offset 40
 	popq	%rbx
@@ -3169,29 +3144,41 @@
 	ret
 	.p2align 4,,10
 	.p2align 3
-.L442:
+.L432:
 	.cfi_restore_state
 	cmpq	%rsi, %rdx
-	ja	.L488
+	ja	.L476
 	subl	%edx, %eax
 	movq	$0, 472(%r12)
 	movslq	%eax, %rsi
-	jmp	.L443
+	jmp	.L433
 	.p2align 4,,10
 	.p2align 3
-.L485:
+.L474:
 	movq	%rbp, %rsi
 	movq	%rbx, %rdi
 	call	finish_connection
-	jmp	.L432
+	addq	$40, %rsp
+	.cfi_remember_state
+	.cfi_def_cfa_offset 40
+	popq	%rbx
+	.cfi_def_cfa_offset 32
+	popq	%rbp
+	.cfi_def_cfa_offset 24
+	popq	%r12
+	.cfi_def_cfa_offset 16
+	popq	%r13
+	.cfi_def_cfa_offset 8
+	ret
 	.p2align 4,,10
 	.p2align 3
-.L457:
+.L446:
+	.cfi_restore_state
 	movl	$1, %r13d
-	jmp	.L449
+	jmp	.L439
 	.p2align 4,,10
 	.p2align 3
-.L488:
+.L476:
 	movq	368(%r12), %rdi
 	subl	%eax, %edx
 	movslq	%edx, %r13
@@ -3200,10 +3187,8 @@
 	call	memmove
 	movq	%r13, 472(%r12)
 	xorl	%esi, %esi
-	jmp	.L443
-.L487:
-	call	__stack_chk_fail
-.L486:
+	jmp	.L433
+.L475:
 	movl	$2, %edi
 	movl	$.LC92, %esi
 	xorl	%eax, %eax
@@ -3237,23 +3222,17 @@
 	movq	%rdi, %rbx
 	movq	%rsi, %rbp
 	movl	$4096, %edx
-	subq	$4120, %rsp
-	.cfi_def_cfa_offset 4144
-	movq	%fs:40, %rax
-	movq	%rax, 4104(%rsp)
-	xorl	%eax, %eax
+	subq	$4104, %rsp
+	.cfi_def_cfa_offset 4128
 	movq	8(%rdi), %rax
 	movq	%rsp, %rsi
 	movl	704(%rax), %edi
 	call	read
 	testl	%eax, %eax
-	js	.L496
-	je	.L493
-.L490:
-	movq	4104(%rsp), %rax
-	xorq	%fs:40, %rax
-	jne	.L497
-	addq	$4120, %rsp
+	js	.L483
+	je	.L481
+.L478:
+	addq	$4104, %rsp
 	.cfi_remember_state
 	.cfi_def_cfa_offset 24
 	popq	%rbx
@@ -3263,21 +3242,25 @@
 	ret
 	.p2align 4,,10
 	.p2align 3
-.L496:
+.L483:
 	.cfi_restore_state
 	call	__errno_location
 	movl	(%rax), %eax
 	cmpl	$4, %eax
-	je	.L490
+	je	.L478
 	cmpl	$11, %eax
-	je	.L490
-.L493:
+	je	.L478
+.L481:
 	movq	%rbp, %rsi
 	movq	%rbx, %rdi
 	call	really_clear_connection
-	jmp	.L490
-.L497:
-	call	__stack_chk_fail
+	addq	$4104, %rsp
+	.cfi_def_cfa_offset 24
+	popq	%rbx
+	.cfi_def_cfa_offset 16
+	popq	%rbp
+	.cfi_def_cfa_offset 8
+	ret
 	.cfi_endproc
 .LFE22:
 	.size	handle_linger, .-handle_linger
@@ -3311,70 +3294,67 @@
 	pushq	%rbp
 	.cfi_def_cfa_offset 40
 	.cfi_offset 6, -40
-	movq	%rsi, %r12
+	xorl	%eax, %eax
 	pushq	%rbx
 	.cfi_def_cfa_offset 48
 	.cfi_offset 3, -48
 	pxor	%xmm0, %xmm0
 	movq	%rdi, %rbx
-	movl	$10, %esi
+	movq	%rsi, %r12
 	movq	%rdx, %rbp
-	subq	$96, %rsp
-	.cfi_def_cfa_offset 144
+	subq	$80, %rsp
+	.cfi_def_cfa_offset 128
 	movzwl	port(%rip), %ecx
 	movl	$.LC94, %edx
-	leaq	78(%rsp), %rdi
-	movq	$0, 52(%rsp)
-	movl	$0, 60(%rsp)
-	movq	%fs:40, %rax
-	movq	%rax, 88(%rsp)
-	xorl	%eax, %eax
-	xorl	%eax, %eax
-	movl	$1, 16(%rsp)
-	movups	%xmm0, 20(%rsp)
-	movl	$1, 24(%rsp)
+	leaq	22(%rsp), %rdi
+	movl	$10, %esi
+	movq	$0, 68(%rsp)
 	movups	%xmm0, 36(%rsp)
+	movl	$0, 76(%rsp)
+	movl	$1, 32(%rsp)
+	movups	%xmm0, 52(%rsp)
+	movl	$1, 40(%rsp)
 	call	snprintf
-	leaq	8(%rsp), %rcx
-	leaq	16(%rsp), %rdx
-	leaq	78(%rsp), %rsi
 	movq	hostname(%rip), %rdi
+	leaq	8(%rsp), %rcx
+	leaq	32(%rsp), %rdx
+	leaq	22(%rsp), %rsi
 	call	getaddrinfo
 	testl	%eax, %eax
-	jne	.L517
+	jne	.L502
 	movq	8(%rsp), %rdi
 	xorl	%r14d, %r14d
 	xorl	%esi, %esi
 	testq	%rdi, %rdi
 	movq	%rdi, %rax
-	jne	.L500
-	jmp	.L518
+	jne	.L486
+	jmp	.L503
 	.p2align 4,,10
 	.p2align 3
-.L520:
+.L505:
 	cmpl	$10, %edx
-	jne	.L502
+	jne	.L488
 	testq	%rsi, %rsi
 	cmove	%rax, %rsi
-.L502:
+.L488:
 	movq	40(%rax), %rax
 	testq	%rax, %rax
-	je	.L519
-.L500:
+	je	.L504
+.L486:
 	movl	4(%rax), %edx
 	cmpl	$2, %edx
-	jne	.L520
+	jne	.L505
 	testq	%r14, %r14
 	cmove	%rax, %r14
 	movq	40(%rax), %rax
 	testq	%rax, %rax
-	jne	.L500
-.L519:
+	jne	.L486
+.L504:
 	testq	%rsi, %rsi
-	je	.L521
+	je	.L506
 	movl	16(%rsi), %r8d
 	cmpq	$128, %r8
-	ja	.L516
+	ja	.L501
 	movl	$16, %ecx
 	movq	%rbp, %rdi
 	rep stosq
@@ -3383,12 +3363,12 @@
 	movq	24(%rsi), %rsi
 	call	memmove
 	movl	$1, 0(%r13)
-.L506:
+.L492:
 	testq	%r14, %r14
-	je	.L522
+	je	.L507
 	movl	16(%r14), %r8d
 	cmpq	$128, %r8
-	ja	.L516
+	ja	.L501
 	xorl	%eax, %eax
 	movl	$16, %ecx
 	movq	%rbx, %rdi
@@ -3399,12 +3379,9 @@
 	call	memmove
 	movq	8(%rsp), %rdi
 	movl	$1, (%r12)
-.L509:
+.L495:
 	call	freeaddrinfo
-	movq	88(%rsp), %rax
-	xorq	%fs:40, %rax
-	jne	.L523
-	addq	$96, %rsp
+	addq	$80, %rsp
 	.cfi_remember_state
 	.cfi_def_cfa_offset 48
 	popq	%rbx
@@ -3418,19 +3395,19 @@
 	popq	%r14
 	.cfi_def_cfa_offset 8
 	ret
-.L518:
+.L503:
 	.cfi_restore_state
 	movl	$0, 0(%r13)
-.L501:
+.L487:
 	movl	$0, (%r12)
-	jmp	.L509
-.L521:
+	jmp	.L495
+.L506:
 	movl	$0, 0(%r13)
-	jmp	.L506
-.L522:
+	jmp	.L492
+.L507:
 	movq	8(%rsp), %rdi
-	jmp	.L501
-.L517:
+	jmp	.L487
+.L502:
 	movl	%eax, %edi
 	movl	%eax, %r14d
 	call	gai_strerror
@@ -3451,9 +3428,7 @@
 	call	fprintf
 	movl	$1, %edi
 	call	exit
-.L523:
-	call	__stack_chk_fail
-.L516:
+.L501:
 	movq	hostname(%rip), %rdx
 	movl	$2, %edi
 	movl	$128, %ecx
@@ -3584,9 +3559,6 @@
 	.cfi_def_cfa_offset 4496
 	movq	(%rsi), %rbx
 	movl	$47, %esi
-	movq	%fs:40, %rax
-	movq	%rax, 4424(%rsp)
-	xorl	%eax, %eax
 	movq	%rbx, %rdi
 	movq	%rbx, argv0(%rip)
 	call	strrchr
@@ -3610,42 +3582,42 @@
 	call	lookup_hostname.constprop.1
 	movl	40(%rsp), %eax
 	testl	%eax, %eax
-	jne	.L526
+	jne	.L510
 	cmpl	$0, 44(%rsp)
-	je	.L655
-.L526:
+	je	.L638
+.L510:
 	movq	throttlefile(%rip), %rdi
 	movl	$0, numthrottles(%rip)
 	movl	$0, maxthrottles(%rip)
 	movq	$0, throttles(%rip)
 	testq	%rdi, %rdi
-	je	.L527
+	je	.L511
 	call	read_throttlefile
-.L527:
+.L511:
 	call	getuid
 	testl	%eax, %eax
 	movl	$32767, %r14d
 	movl	$32767, 12(%rsp)
-	je	.L656
-.L528:
+	je	.L639
+.L512:
 	movq	logfile(%rip), %rbp
 	testq	%rbp, %rbp
-	je	.L596
+	je	.L579
 	movl	$.LC102, %esi
 	movq	%rbp, %rdi
 	call	strcmp
 	testl	%eax, %eax
-	jne	.L531
+	jne	.L515
 	movl	$1, no_log(%rip)
 	xorl	%r13d, %r13d
-.L530:
+.L514:
 	movq	dir(%rip), %rdi
 	testq	%rdi, %rdi
-	je	.L536
+	je	.L520
 	call	chdir
 	testl	%eax, %eax
-	js	.L657
-.L536:
+	js	.L640
+.L520:
 	leaq	320(%rsp), %rbp
 	movl	$4096, %esi
 	movq	%rbp, %rdi
@@ -3659,18 +3631,18 @@
 	movq	%rdx, %rcx
 	subq	$1, %rcx
 	cmpb	$47, 319(%rsp,%rcx)
-	je	.L537
+	je	.L521
 	movw	$47, 0(%rbp,%rcx)
-.L537:
+.L521:
 	cmpl	$0, debug(%rip)
-	jne	.L538
+	jne	.L522
 	movq	stdin(%rip), %rdi
 	call	fclose
 	movq	stdout(%rip), %rdi
 	cmpq	%r13, %rdi
-	je	.L539
+	je	.L523
 	call	fclose
-.L539:
+.L523:
 	movq	stderr(%rip), %rdi
 	call	fclose
 	movl	$1, %esi
@@ -3678,16 +3650,16 @@
 	call	daemon
 	testl	%eax, %eax
 	movl	$.LC109, %esi
-	js	.L653
-.L540:
+	js	.L636
+.L524:
 	movq	pidfile(%rip), %rdi
 	testq	%rdi, %rdi
-	je	.L541
+	je	.L525
 	movl	$.LC110, %esi
 	call	fopen
 	testq	%rax, %rax
 	movq	%rax, %r15
-	je	.L658
+	je	.L641
 	call	getpid
 	movq	%r15, %rdi
 	movl	%eax, %edx
@@ -3696,23 +3668,23 @@
 	call	fprintf
 	movq	%r15, %rdi
 	call	fclose
-.L541:
+.L525:
 	call	fdwatch_get_nfiles
 	testl	%eax, %eax
 	movl	%eax, max_connects(%rip)
-	js	.L659
+	js	.L642
 	subl	$10, %eax
 	cmpl	$0, do_chroot(%rip)
 	movl	%eax, max_connects(%rip)
-	jne	.L660
-.L544:
+	jne	.L643
+.L528:
 	movq	data_dir(%rip), %rdi
 	testq	%rdi, %rdi
-	je	.L548
+	je	.L532
 	call	chdir
 	testl	%eax, %eax
-	js	.L661
-.L548:
+	js	.L644
+.L532:
 	movl	$handle_term, %esi
 	movl	$15, %edi
 	xorl	%eax, %eax
@@ -3796,7 +3768,7 @@
 	.cfi_def_cfa_offset 4496
 	testq	%rax, %rax
 	movq	%rax, hs(%rip)
-	je	.L654
+	je	.L637
 	movq	JunkClientData(%rip), %rdx
 	xorl	%edi, %edi
 	movl	$1, %r8d
@@ -3804,7 +3776,7 @@
 	movl	$occasional, %esi
 	call	tmr_create
 	testq	%rax, %rax
-	je	.L662
+	je	.L645
 	movq	JunkClientData(%rip), %rdx
 	xorl	%edi, %edi
 	movl	$1, %r8d
@@ -3812,9 +3784,9 @@
 	movl	$idle, %esi
 	call	tmr_create
 	testq	%rax, %rax
-	je	.L663
+	je	.L646
 	cmpl	$0, numthrottles(%rip)
-	jle	.L554
+	jle	.L538
 	movq	JunkClientData(%rip), %rdx
 	xorl	%edi, %edi
 	movl	$1, %r8d
@@ -3822,8 +3794,8 @@
 	movl	$update_throttles, %esi
 	call	tmr_create
 	testq	%rax, %rax
-	je	.L664
-.L554:
+	je	.L647
+.L538:
 	movq	JunkClientData(%rip), %rdx
 	xorl	%edi, %edi
 	movl	$1, %r8d
@@ -3831,7 +3803,7 @@
 	movl	$show_stats, %esi
 	call	tmr_create
 	testq	%rax, %rax
-	je	.L665
+	je	.L648
 	xorl	%edi, %edi
 	call	time
 	movq	$0, stats_connections(%rip)
@@ -3841,36 +3813,36 @@
 	movl	$0, stats_simultaneous(%rip)
 	call	getuid
 	testl	%eax, %eax
-	jne	.L557
+	jne	.L541
 	xorl	%esi, %esi
 	xorl	%edi, %edi
 	call	setgroups
 	testl	%eax, %eax
 	movl	$.LC124, %esi
-	js	.L653
+	js	.L636
 	movl	%r14d, %edi
 	call	setgid
 	testl	%eax, %eax
 	movl	$.LC125, %esi
-	js	.L653
+	js	.L636
 	movq	user(%rip), %rdi
 	movl	%r14d, %esi
 	call	initgroups
 	testl	%eax, %eax
-	js	.L666
-.L560:
+	js	.L649
+.L544:
 	movl	12(%rsp), %edi
 	call	setuid
 	testl	%eax, %eax
 	movl	$.LC127, %esi
-	js	.L653
+	js	.L636
 	cmpl	$0, do_chroot(%rip)
-	jne	.L557
+	jne	.L541
 	movl	$.LC128, %esi
 	movl	$4, %edi
 	xorl	%eax, %eax
 	call	syslog
-.L557:
+.L541:
 	movslq	max_connects(%rip), %rbp
 	movq	%rbp, %rbx
 	imulq	$144, %rbp, %rbp
@@ -3878,105 +3850,105 @@
 	call	malloc
 	testq	%rax, %rax
 	movq	%rax, connects(%rip)
-	je	.L563
+	je	.L547
 	movq	%rax, %rdx
 	xorl	%ecx, %ecx
-	jmp	.L564
-.L565:
+	jmp	.L548
+.L549:
 	addl	$1, %ecx
 	movl	$0, (%rdx)
 	movq	$0, 8(%rdx)
 	movl	%ecx, 4(%rdx)
 	addq	$144, %rdx
-.L564:
+.L548:
 	cmpl	%ecx, %ebx
-	jg	.L565
+	jg	.L549
 	movl	$-1, -140(%rax,%rbp)
 	movq	hs(%rip), %rax
 	movl	$0, first_free_connect(%rip)
 	movl	$0, num_connects(%rip)
 	movl	$0, httpd_conn_count(%rip)
 	testq	%rax, %rax
-	je	.L567
+	je	.L551
 	movl	72(%rax), %edi
 	cmpl	$-1, %edi
-	je	.L568
+	je	.L552
 	xorl	%edx, %edx
 	xorl	%esi, %esi
 	call	fdwatch_add_fd
 	movq	hs(%rip), %rax
-.L568:
+.L552:
 	movl	76(%rax), %edi
 	cmpl	$-1, %edi
-	je	.L567
+	je	.L551
 	xorl	%edx, %edx
 	xorl	%esi, %esi
 	call	fdwatch_add_fd
-.L567:
+.L551:
 	leaq	48(%rsp), %rdi
 	call	tmr_prepare_timeval
-.L570:
+.L554:
 	cmpl	$0, terminate(%rip)
-	je	.L593
+	je	.L577
 	cmpl	$0, num_connects(%rip)
-	jle	.L667
-.L593:
+	jle	.L650
+.L577:
 	movl	got_hup(%rip), %eax
 	testl	%eax, %eax
-	jne	.L668
-.L571:
+	jne	.L651
+.L555:
 	leaq	48(%rsp), %rdi
 	call	tmr_mstimeout
 	movq	%rax, %rdi
 	call	fdwatch
 	testl	%eax, %eax
 	movl	%eax, %ebx
-	jns	.L572
+	jns	.L556
 	call	__errno_location
 	movl	(%rax), %eax
 	cmpl	$4, %eax
-	je	.L570
+	je	.L554
 	cmpl	$11, %eax
-	je	.L570
+	je	.L554
 	movl	$3, %edi
 	movl	$.LC130, %esi
 	xorl	%eax, %eax
 	call	syslog
 	movl	$1, %edi
 	call	exit
-.L531:
+.L515:
 	movl	$.LC77, %esi
 	movq	%rbp, %rdi
 	call	strcmp
 	testl	%eax, %eax
-	jne	.L532
+	jne	.L516
 	movq	stdout(%rip), %r13
-	jmp	.L530
-.L659:
+	jmp	.L514
+.L642:
 	movl	$.LC112, %esi
-.L653:
+.L636:
 	movl	$2, %edi
 	xorl	%eax, %eax
 	call	syslog
-.L654:
+.L637:
 	movl	$1, %edi
 	call	exit
-.L538:
+.L522:
 	call	setsid
-	jmp	.L540
-.L656:
+	jmp	.L524
+.L639:
 	movq	user(%rip), %rdi
 	call	getpwnam
 	testq	%rax, %rax
-	je	.L669
+	je	.L652
 	movl	16(%rax), %edx
 	movl	20(%rax), %r14d
 	movl	%edx, 12(%rsp)
-	jmp	.L528
-.L596:
+	jmp	.L512
+.L579:
 	xorl	%r13d, %r13d
-	jmp	.L530
-.L655:
+	jmp	.L514
+.L638:
 	movl	$.LC98, %esi
 	movl	$3, %edi
 	xorl	%eax, %eax
@@ -3988,7 +3960,7 @@
 	call	fprintf
 	movl	$1, %edi
 	call	exit
-.L532:
+.L516:
 	movq	%rbp, %rdi
 	movl	$.LC79, %esi
 	call	fopen
@@ -3998,12 +3970,12 @@
 	movq	%rbp, %rdi
 	call	chmod
 	testq	%r13, %r13
-	je	.L599
+	je	.L582
 	testl	%eax, %eax
-	jne	.L599
+	jne	.L582
 	cmpb	$47, 0(%rbp)
-	jne	.L670
-.L535:
+	jne	.L653
+.L519:
 	movq	%r13, %rdi
 	call	fileno
 	movl	$1, %edx
@@ -4013,7 +3985,7 @@
 	call	fcntl
 	call	getuid
 	testl	%eax, %eax
-	jne	.L530
+	jne	.L514
 	movq	%r13, %rdi
 	call	fileno
 	movl	12(%rsp), %esi
@@ -4021,15 +3993,15 @@
 	movl	%eax, %edi
 	call	fchown
 	testl	%eax, %eax
-	jns	.L530
+	jns	.L514
 	movl	$.LC105, %esi
 	movl	$4, %edi
 	xorl	%eax, %eax
 	call	syslog
 	movl	$.LC106, %edi
 	call	perror
-	jmp	.L530
-.L658:
+	jmp	.L514
+.L641:
 	movq	pidfile(%rip), %rdx
 	movl	$2, %edi
 	movl	$.LC69, %esi
@@ -4037,20 +4009,20 @@
 	call	syslog
 	movl	$1, %edi
 	call	exit
-.L660:
+.L643:
 	movq	%rbp, %rdi
 	call	chroot
 	testl	%eax, %eax
-	js	.L671
+	js	.L654
 	movq	logfile(%rip), %r8
 	testq	%r8, %r8
-	je	.L546
+	je	.L530
 	movl	$.LC77, %esi
 	movq	%r8, %rdi
 	movq	%r8, 16(%rsp)
 	call	strcmp
 	testl	%eax, %eax
-	je	.L546
+	je	.L530
 	xorl	%eax, %eax
 	orq	$-1, %rcx
 	movq	%rbp, %rdi
@@ -4063,18 +4035,18 @@
 	movq	%r8, %rdi
 	call	strncmp
 	testl	%eax, %eax
-	jne	.L547
+	jne	.L531
 	movq	16(%rsp), %r8
 	movq	24(%rsp), %rcx
 	leaq	-2(%r8,%rcx), %rsi
 	movq	%r8, %rdi
 	call	strcpy
-.L546:
+.L530:
 	movq	%rbp, %rdi
 	movw	$47, 320(%rsp)
 	call	chdir
 	testl	%eax, %eax
-	jns	.L544
+	jns	.L528
 	movl	$.LC116, %esi
 	movl	$2, %edi
 	xorl	%eax, %eax
@@ -4083,7 +4055,7 @@
 	call	perror
 	movl	$1, %edi
 	call	exit
-.L657:
+.L640:
 	movl	$.LC107, %esi
 	movl	$2, %edi
 	xorl	%eax, %eax
@@ -4092,13 +4064,13 @@
 	call	perror
 	movl	$1, %edi
 	call	exit
-.L662:
+.L645:
 	movl	$2, %edi
 	movl	$.LC120, %esi
 	call	syslog
 	movl	$1, %edi
 	call	exit
-.L661:
+.L644:
 	movl	$.LC118, %esi
 	movl	$2, %edi
 	xorl	%eax, %eax
@@ -4107,7 +4079,7 @@
 	call	perror
 	movl	$1, %edi
 	call	exit
-.L670:
+.L653:
 	xorl	%eax, %eax
 	movl	$.LC103, %esi
 	movl	$4, %edi
@@ -4117,67 +4089,67 @@
 	movl	$.LC104, %esi
 	xorl	%eax, %eax
 	call	fprintf
-	jmp	.L535
-.L572:
+	jmp	.L519
+.L556:
 	leaq	48(%rsp), %rdi
 	call	tmr_prepare_timeval
 	testl	%ebx, %ebx
-	je	.L672
+	je	.L655
 	movq	hs(%rip), %rax
 	testq	%rax, %rax
-	je	.L584
+	je	.L568
 	movl	76(%rax), %edi
 	cmpl	$-1, %edi
-	je	.L579
+	je	.L563
 	call	fdwatch_check_fd
 	testl	%eax, %eax
-	jne	.L580
-.L583:
+	jne	.L564
+.L567:
 	movq	hs(%rip), %rax
 	testq	%rax, %rax
-	je	.L584
-.L579:
+	je	.L568
+.L563:
 	movl	72(%rax), %edi
 	cmpl	$-1, %edi
-	je	.L584
+	je	.L568
 	call	fdwatch_check_fd
 	testl	%eax, %eax
-	je	.L584
+	je	.L568
 	movq	hs(%rip), %rax
 	leaq	48(%rsp), %rdi
 	movl	72(%rax), %esi
 	call	handle_newconnect
 	testl	%eax, %eax
-	jne	.L570
-.L584:
+	jne	.L554
+.L568:
 	call	fdwatch_get_next_client_data
 	cmpq	$-1, %rax
 	movq	%rax, %rbx
-	je	.L673
+	je	.L656
 	testq	%rbx, %rbx
-	je	.L584
+	je	.L568
 	movq	8(%rbx), %rax
 	movl	704(%rax), %edi
 	call	fdwatch_check_fd
 	testl	%eax, %eax
-	je	.L674
+	je	.L657
 	movl	(%rbx), %eax
 	cmpl	$2, %eax
-	je	.L587
+	je	.L571
 	cmpl	$4, %eax
-	je	.L588
+	je	.L572
 	subl	$1, %eax
-	jne	.L584
+	jne	.L568
 	leaq	48(%rsp), %rsi
 	movq	%rbx, %rdi
 	call	handle_read
-	jmp	.L584
-.L674:
+	jmp	.L568
+.L657:
 	leaq	48(%rsp), %rsi
 	movq	%rbx, %rdi
 	call	clear_connection
-	jmp	.L584
-.L669:
+	jmp	.L568
+.L652:
 	movq	user(%rip), %rdx
 	movl	$.LC100, %esi
 	movl	$2, %edi
@@ -4190,37 +4162,37 @@
 	call	fprintf
 	movl	$1, %edi
 	call	exit
-.L668:
+.L651:
 	call	re_open_logfile
 	movl	$0, got_hup(%rip)
-	jmp	.L571
-.L673:
+	jmp	.L555
+.L656:
 	leaq	48(%rsp), %rdi
 	call	tmr_run
 	movl	got_usr1(%rip), %eax
 	testl	%eax, %eax
-	je	.L570
+	je	.L554
 	cmpl	$0, terminate(%rip)
-	jne	.L570
+	jne	.L554
 	movq	hs(%rip), %rax
 	movl	$1, terminate(%rip)
 	testq	%rax, %rax
-	je	.L570
+	je	.L554
 	movl	72(%rax), %edi
 	cmpl	$-1, %edi
-	je	.L591
+	je	.L575
 	call	fdwatch_del_fd
 	movq	hs(%rip), %rax
-.L591:
+.L575:
 	movl	76(%rax), %edi
 	cmpl	$-1, %edi
-	je	.L592
+	je	.L576
 	call	fdwatch_del_fd
-.L592:
+.L576:
 	movq	hs(%rip), %rdi
 	call	httpd_unlisten
-	jmp	.L570
-.L599:
+	jmp	.L554
+.L582:
 	movq	%rbp, %rdx
 	movl	$.LC69, %esi
 	movl	$2, %edi
@@ -4230,13 +4202,13 @@
 	call	perror
 	movl	$1, %edi
 	call	exit
-.L665:
+.L648:
 	movl	$2, %edi
 	movl	$.LC123, %esi
 	call	syslog
 	movl	$1, %edi
 	call	exit
-.L671:
+.L654:
 	movl	$.LC113, %esi
 	movl	$2, %edi
 	xorl	%eax, %eax
@@ -4245,23 +4217,23 @@
 	call	perror
 	movl	$1, %edi
 	call	exit
-.L588:
+.L572:
 	leaq	48(%rsp), %rsi
 	movq	%rbx, %rdi
 	call	handle_linger
-	jmp	.L584
-.L587:
+	jmp	.L568
+.L571:
 	leaq	48(%rsp), %rsi
 	movq	%rbx, %rdi
 	call	handle_send
-	jmp	.L584
-.L663:
+	jmp	.L568
+.L646:
 	movl	$2, %edi
 	movl	$.LC121, %esi
 	call	syslog
 	movl	$1, %edi
 	call	exit
-.L547:
+.L531:
 	xorl	%eax, %eax
 	movl	$.LC114, %esi
 	movl	$4, %edi
@@ -4271,29 +4243,29 @@
 	movl	$.LC115, %esi
 	xorl	%eax, %eax
 	call	fprintf
-	jmp	.L546
-.L664:
+	jmp	.L530
+.L647:
 	movl	$2, %edi
 	movl	$.LC122, %esi
 	call	syslog
 	movl	$1, %edi
 	call	exit
-.L672:
+.L655:
 	leaq	48(%rsp), %rdi
 	call	tmr_run
-	jmp	.L570
-.L563:
+	jmp	.L554
+.L547:
 	movl	$.LC129, %esi
-	jmp	.L653
-.L580:
+	jmp	.L636
+.L564:
 	movq	hs(%rip), %rax
 	leaq	48(%rsp), %rdi
 	movl	76(%rax), %esi
 	call	handle_newconnect
 	testl	%eax, %eax
-	je	.L583
-	jmp	.L570
-.L667:
+	je	.L567
+	jmp	.L554
+.L650:
 	call	shut_down
 	movl	$5, %edi
 	movl	$.LC85, %esi
@@ -4302,12 +4274,12 @@
 	call	closelog
 	xorl	%edi, %edi
 	call	exit
-.L666:
+.L649:
 	movl	$.LC126, %esi
 	movl	$4, %edi
 	xorl	%eax, %eax
 	call	syslog
-	jmp	.L560
+	jmp	.L544
 	.cfi_endproc
 .LFE9:
 	.size	main, .-main
